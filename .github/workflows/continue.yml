name: Continue Website Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' 
        # this condition checks if the cache was hit, if not it will install dependencies, check the previous step which has an id, output is the result of that step and cache-hit is how is named by the system
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' 
        # this condition checks if the cache was hit, if not it will install dependencies, check the previous step which has an id, output is the result of that step and cache-hit is how is named by the system
        run: npm ci
      - name: Test code
        continue-on-error: true # allows the workflow to continue even if this step fails
        id: run-tests
        run: npm run test
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' 
        # this condition checks if the cache was hit, if not it will install dependencies, check the previous step which has an id, output is the result of that step and cache-hit is how is named by the system
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  report:
    needs: [lint, deploy] # define that this job will finish at the end
    if: failure() 
    # and will be exceuted only if there is a failure in the previous jobs
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "something went wrong"
          echo "${{ github }}"
